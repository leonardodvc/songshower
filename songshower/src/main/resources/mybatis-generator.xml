<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE generatorConfiguration   PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--mysql 连接数据库jar 这里选择自己本地位置;
        如果不知道maven本地仓库地址，可以使用EveryThing工具全局搜索mysql-connector-java，找到jar包位置；
        也可以手动下载一个jar放在指定位置，进行引用。
    -->
<!--    <classPathEntry location="E:/mvnRespo/mysql/mysql-connector-java/5.1.47/mysql-connector-java-5.1.47.jar"/>-->

    <!-- targetRuntime为MyBatis3时，生成Example类 -->
    <context id="testTables" targetRuntime="MyBatis3Simple">
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <!-- 是否去除自动生成的注释,true：是,false:否 -->
            <!-- 这个注释是generator的注释。不是建表时手输的，没什么卵用-->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--数据库链接URL，用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://60.31.143.35:33066/songslist?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=GMT%2B8&amp;allowPublicKeyRetrieval=true"
                        userId="developer_liutao"
                        password="Abcd1234+">
        </jdbcConnection>

        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
           NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 指定javaBean生成的位置
            targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
            targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录 -->
        <javaModelGenerator targetPackage="cn.com.lemont.songshower.VO" targetProject="D:/IdeaProjects/liutao-songshower/songshower/src/main/java">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false；如果多个数据库改为true分目录 -->
            <property name="enableSubPackages" value="false"/>
            <!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 指定mapper映射文件生成的位置  ***mapper.xml
             targetPackage、targetProject同javaModelGenerator中作用一样 -->
        <sqlMapGenerator targetPackage="mapping" targetProject="D:/IdeaProjects/liutao-songshower/songshower/src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 指定mapper接口生成的位置
             targetPackage、targetProject同javaModelGenerator中作用一样 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="cn.com.lemont.songshower.dao" targetProject="D:/IdeaProjects/liutao-songshower/songshower/src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>




<!--        &lt;!&ndash; 生成映射文件的包名和位置 &ndash;&gt;-->
<!--        <sqlMapGenerator targetPackage=".\src\main\resources\mapping"-->
<!--                         targetProject=".\src\main\java">-->
<!--            <property name="enableSubPackages" value="true"/>-->
<!--        </sqlMapGenerator>-->
<!--        &lt;!&ndash; 生成DAO的包名和位置 ***mapper.java&ndash;&gt;-->
<!--        <javaClientGenerator type="XMLMAPPER"-->
<!--                             targetPackage="cn.com.lemont.dao"-->
<!--                             targetProject=".\src\main\java">-->
<!--            <property name="enableSubPackages" value="true"/>-->
<!--        </javaClientGenerator>-->
        <!-- 指定数据库表
            domainObjectName：生成的domain类的名字,当表名和domain类的名字有差异时一定要设置，如果不设置，直接使用表名作为domain类的名字；
            可以设置为somepck.domainName，那么会自动把domainName类再放到somepck包里面；
        -->
        <table tableName="db_artist_info" domainObjectName="DBArtistInfoVO" mapperName="DBArtistInfoMapper"/>
        <table tableName="db_song_info" domainObjectName="DBSongInfoVO" mapperName="DBSongInfoMapper"/>
        <table tableName="db_user_info" domainObjectName="DBUserInfoVO" mapperName="DBUserInfoMapper"/>
        <table tableName="dz_song_artist" domainObjectName="DZSongArtistVO" mapperName="DZSongArtistMapper"/>
        <table tableName="dz_user_song" domainObjectName="DZUserSongVO" mapperName="DZUserSongMapper"/>
    </context>
</generatorConfiguration>
